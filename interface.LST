C51 COMPILER V9.01   INTERFACE                                                             05/11/2021 08:03:24 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE INTERFACE
OBJECT MODULE PLACED IN interface.OBJ
COMPILER INVOKED BY: C:\Users\12291\Desktop\新建文件夹\C51\BIN\C51.EXE interface.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<intrins.h>
   2          #include"function.h"
   3          #include"data.h"
   4          sbit LED = P1^0;
   5          extern Cursor cursor_m;
   6          /*******************************************************************************
   7          * 函 数 名         : Start_interface()
   8          * 函数功能         : 开始界面显示
   9          * 输    入         : 无
  10          * 输    出         : 无
  11          *******************************************************************************/
  12          void Start_interface(){
  13   1              uint place=0;
  14   1          char ch=0x00;
  15   1              lcd_init_graph();
  16   1              write_lcd24(28,9,da);//28-48
  17   1              write_lcd24(28,12,da);
  18   1              write_lcd24(28,15,ta);
  19   1              write_lcd24(28,18,fang); 
  20   1          write_lcd8(49,0,p1);
  21   1              write_lcd8(49,1,l);     
  22   1          write_lcd8(49,2,e);
  23   1          write_lcd8(49,3,a);
  24   1          write_lcd8(49,4,s);
  25   1              write_lcd8(49,5,e);
  26   1          write_lcd8(49,6,space);
  27   1          write_lcd8(49,7,u); 
  28   1          write_lcd8(49,8,s); 
  29   1          write_lcd8(49,9,i);
  30   1           write_lcd8(49,10,n);
  31   1           write_lcd8(49,11,g);
  32   1           write_lcd8(49,12,space);
  33   1           write_lcd8(49,13,h);
  34   1           write_lcd8(49,14,a);
  35   1               write_lcd8(49,15,o);
  36   1           write_lcd8(49,16,space);
  37   1               write_lcd8(49,17,t);
  38   1               write_lcd8(49,18,o);
  39   1               write_lcd8(49,19,space);
  40   1               write_lcd8(49,20,s);
  41   1               write_lcd8(49,21,t);
  42   1               write_lcd8(49,22,a);
  43   1               write_lcd8(49,23,r);
  44   1               write_lcd8(49,24,t);
  45   1               write_lcd8(49,25,douhao);
  46   1           write_lcd8(49,26,s);
  47   1           write_lcd8(49,27,t);
  48   1           write_lcd8(49,28,o);
  49   1           write_lcd8(49,29,p2);
  50   1                      write_lcd8(65,0,t);
  51   1                      write_lcd8(65,1,o);
  52   1                      write_lcd8(65,2,space);
  53   1                      write_lcd8(65,3,s);
  54   1                      write_lcd8(65,4,t);
  55   1                      write_lcd8(65,5,o);
C51 COMPILER V9.01   INTERFACE                                                             05/11/2021 08:03:24 PAGE 2   

  56   1                      write_lcd8(65,6,p2);
  57   1                      write_lcd8(65,7,douhao);
  58   1                      write_lcd8(65,8,u);
  59   1                      write_lcd8(65,9,s);
  60   1                      write_lcd8(65,10,i);
  61   1                      write_lcd8(65,11,n);    
  62   1                      write_lcd8(65,12,g);
  63   1                      write_lcd8(65,13,space);
  64   1                      write_lcd8(65,14,l);
  65   1                      write_lcd8(65,15,e);
  66   1                      write_lcd8(65,16,f);
  67   1                      write_lcd8(65,17,t);
  68   1                      write_lcd8(65,18,douhao);
  69   1                      write_lcd8(65,19,d);
  70   1                      write_lcd8(65,20,o);
  71   1                      write_lcd8(65,21,w);
  72   1                      write_lcd8(65,22,n);
  73   1                      write_lcd8(65,23,space);
  74   1                      write_lcd8(65,24,r);
  75   1                      write_lcd8(65,25,i);
  76   1                      write_lcd8(65,26,g);
  77   1                      write_lcd8(65,27,h);
  78   1                      write_lcd8(65,28,t);
  79   1                      write_lcd8(65,29,space);
  80   1                      write_lcd8(81,0,t);
  81   1                      write_lcd8(81,1,o);
  82   1                      write_lcd8(81,3,c2);
  83   1                      write_lcd8(81,4,o);
  84   1                      write_lcd8(81,5,n);
  85   1                      write_lcd8(81,6,t);
  86   1                      write_lcd8(81,7,r);
  87   1                      write_lcd8(81,8,o);
  88   1                      write_lcd8(81,9,l);
  89   1                      write_lcd8(81,11,c2);
  90   1                      write_lcd8(81,12,u);
  91   1                      write_lcd8(81,13,r);
  92   1                      write_lcd8(81,14,s);
  93   1                      write_lcd8(81,15,o);
  94   1                      write_lcd8(81,16,r);
  95   1      
  96   1      }
  97          
  98          
  99          
 100          
 101          
 102          
 103          
 104          
 105          
 106          /*******************************************************************************
 107          * 函 数 名         : cursor_flash(uchar x,uchar y)
 108          * 函数功能         : 光标闪烁
 109          * 输    入         : 坐标
 110          * 输    出         : 无
 111          *******************************************************************************/
 112          void cursor_flash(uchar x,uchar y)
 113          {//x为行坐标，y为列坐标
 114   1         
 115   1          int place;
 116   1              int temp_x = x;  
 117   1              int temp_y = y;
C51 COMPILER V9.01   INTERFACE                                                             05/11/2021 08:03:24 PAGE 3   

 118   1          uint i = 0;
 119   1              uint j = 0;
 120   1              place = x*30+ y;
 121   1          com = 0;
 122   1              while(1)
 123   1              {
 124   2      
 125   2                  for(i = 0;i < 16;i++)
 126   2                      {
 127   3              
 128   3                    for(j=0;j<1;j++)                                                                                   
             -                                          //字符设置为16*8
 129   3                    {
 130   4                              place = x*30+ y;
 131   4                              y++;
 132   4                      write_data(place%256);                                                                           
             -                        //写入地址高位
 133   4                      write_data(place/256);                                                                           
             -                         //写入地址低位
 134   4                      write_com(0x24);                                                                                 
             -                         //地址设置
 135   4                      write_com(0xb0);                                                                                 
             -                         //设置数据自动写
 136   4                      write_data(cursor[i+j]);                                                     
 137   4                      write_com(0xb2);        
 138   4                              
 139   4                        }   
 140   3                        x++;
 141   3                        y = temp_y;                                                                                             
             -              //自动复位
 142   3                  
 143   3                      }
 144   2      
 145   2                      x = temp_x;
 146   2                      _nop_();
 147   2                      _nop_();
 148   2                      _nop_();
 149   2                       for(i = 0;i < 16;i++)
 150   2                      {
 151   3              
 152   3                    for(j=0;j<1;j++)                                                                                   
             -                                          //字符设置为16*8
 153   3                    {
 154   4                              place = x*30+ y;
 155   4                              y++;
 156   4                      write_data(place%256);                                                                           
             -                        //写入地址高位
 157   4                      write_data(place/256);                                                                           
             -                         //写入地址低位
 158   4                      write_com(0x24);                                                                                 
             -                         //地址设置
 159   4                      write_com(0xb0);                                                                                 
             -                         //设置数据自动写
 160   4                      write_data(0x00);                                                     
 161   4                      write_com(0xb2);        
 162   4                              
 163   4                        }   
 164   3                        x++;
 165   3                        y = temp_y;                                                                                             
             -              //自动复位
 166   3                  
 167   3                      }
C51 COMPILER V9.01   INTERFACE                                                             05/11/2021 08:03:24 PAGE 4   

 168   2                      x = temp_x;
 169   2                      _nop_();
 170   2                      _nop_();
 171   2                      _nop_();
 172   2                      if(com != 0)
 173   2                      {
 174   3                      cursor_move(temp_x,temp_y);
 175   3                          temp_x = cursor_m.x;
 176   3                              temp_y = cursor_m.y;
 177   3                              x = temp_x;
 178   3                              y = temp_y;
 179   3                              com = 0;
 180   3                      }
 181   2              }
 182   1      }
 183          
 184          
 185          
 186          /*******************************************************************************
 187          * 函 数 名         : cursor_move();
 188          * 函数功能         : 移动光标
 189          * 输    入         : 无
 190          * 输    出         : 无
 191          *******************************************************************************/
 192          
 193          
 194          void cursor_move(uint temp_x,uint temp_y)
 195          {
 196   1      
 197   1       while(com != 0){
 198   2              LED = ~LED;
 199   2               if(com == 0x02)
 200   2               {
 201   3                       clear_part(temp_x,temp_y,2);
 202   3                       write_lcd16(temp_x,temp_y,hei);
 203   3                   cursor_m.x-=40;
 204   3                       com = 0;
 205   3                      //cursor_flash(cursor_m.x,cursor_m.y);
 206   3               }
 207   2               else if(com ==0x01)
 208   2               {
 209   3                       clear_part(temp_x,temp_y,2);
 210   3                       write_lcd16(temp_x,temp_y,hei);
 211   3                   cursor_m.y-=2;
 212   3                       com = 0;
 213   3              //       cursor_flash(cursor_m.x,cursor_m.y);
 214   3               }
 215   2               else if(com ==0x0f){
 216   3                       clear_part(temp_x,temp_y,2);
 217   3                       write_lcd16(temp_x,temp_y,hei);
 218   3                   cursor_m.x+=40;
 219   3              //       cursor_flash(cursor_m.x,cursor_m.y);
 220   3                   com = 0;
 221   3               }
 222   2               else if(com == 0x80){
 223   3                       clear_part(temp_x,temp_y,2);
 224   3                   write_lcd16(temp_x,temp_y,hei);
 225   3                       cursor_m.y+=2;
 226   3                       com = 0;
 227   3              //       cursor_flash(cursor_m.x,cursor_m.y);
 228   3               
 229   3               }
C51 COMPILER V9.01   INTERFACE                                                             05/11/2021 08:03:24 PAGE 5   

 230   2               
 231   2      
 232   2        }
 233   1      
 234   1      }
 235          /*******************************************************************************
 236          * 函 数 名         : c_pass1()；
 237          * 函数功能         : 关卡1界面静态显示
 238          * 输    入         : 无
 239          * 输    出         : 无
 240          *******************************************************************************/
 241          void c_pass1()
 242          {
 243   1              
 244   1              uint x = 100;
 245   1              uint y = 30;
 246   1              uint i = 2;
 247   1              uint j = 0;       
 248   1              for(;j < y;j+=2){
 249   2              
 250   2                      write_lcd16(i ,j ,hei);
 251   2      
 252   2              }
 253   1                
 254   1              j = 0;
 255   1              i = 2 + 60;
 256   1      
 257   1              for(;j < y - 4;j+=2){
 258   2              
 259   2                      write_lcd16(i ,j ,hei);
 260   2      
 261   2              } 
 262   1              init_enemy();
 263   1      
 264   1              cursor_flash(cursor_m.x,cursor_m.y);
 265   1      
 266   1      }
 267          
 268          /*******************************************************************************
 269          * 函 数 名         : c_pass2()
 270          * 函数功能         : 关卡2界面显示
 271          * 输    入         : 无
 272          * 输    出         : 无
 273          *******************************************************************************/
 274          void c_pass2()
 275          {
 276   1          
 277   1              uint x = 100;
 278   1              uint y = 30;
 279   1              uint i = 2;
 280   1              uint j = 0;
 281   1              for(;j < y;j+=2){
 282   2              
 283   2                      write_lcd16(i ,j ,hei);
 284   2      
 285   2              }
 286   1      
 287   1              j = 0;
 288   1              i = 2 + 40;
 289   1      
 290   1              for(;j < y - 4;j+=2){
 291   2              
C51 COMPILER V9.01   INTERFACE                                                             05/11/2021 08:03:24 PAGE 6   

 292   2                      write_lcd16(i ,j ,hei);
 293   2      
 294   2              }
 295   1      
 296   1              j = 4;
 297   1              i = 2 + 40+40;
 298   1      
 299   1              for(;j < y ;j+=2){
 300   2              
 301   2                      write_lcd16(i ,j ,hei);
 302   2      
 303   2              }
 304   1      
 305   1      
 306   1      
 307   1      }
 308          
 309          
 310          
 311          /*******************************************************************************
 312          * 函 数 名         : c_pass3();
 313          * 函数功能         : 关卡3界面显示
 314          * 输    入         : 无
 315          * 输    出         : 无
 316          *******************************************************************************/
 317          void c_pass3()
 318          {
 319   1          
 320   1              uint x = 100;
 321   1              uint y = 30;
 322   1              uint i = 2;
 323   1              uint j = 0;
 324   1              for(;j < y;j+=2){
 325   2              
 326   2                      write_lcd16(i ,j ,hei);
 327   2      
 328   2              }
 329   1      
 330   1              j = 0;
 331   1              i = 2 + 40;
 332   1      
 333   1              for(;j < y -10;j+=2){
 334   2              
 335   2                      write_lcd16(i ,j ,hei);
 336   2      
 337   2              }
 338   1      
 339   1              j = 10;
 340   1              i = 2 + 40 + 40;
 341   1      
 342   1              for(;j < y ;j+=2){
 343   2              
 344   2                      write_lcd16(i ,j ,hei);
 345   2      
 346   2              }
 347   1      
 348   1      
 349   1      
 350   1      
 351   1      }
 352          
 353          
C51 COMPILER V9.01   INTERFACE                                                             05/11/2021 08:03:24 PAGE 7   

 354          
 355          
 356          
 357          
 358          
 359          /*******************************************************************************
 360          * 函 数 名         : c_pass_choice();
 361          * 函数功能         : 关卡选择界面
 362          * 输    入         : 无
 363          * 输    出         : 无
 364          *******************************************************************************/
 365          
 366          
 367          void c_pass_choice(){
 368   1      
 369   1           while(com!=0x02&&com!=0x01&&com!=0x0f){
 370   2                  write_lcd8(28,9,u);//28-48
 371   2                      write_lcd8(28,10,p2);
 372   2      
 373   2                      write_lcd8(28,12,p1);
 374   2                      write_lcd8(28,13,a);
 375   2                      write_lcd8(28,14,s);
 376   2                      write_lcd8(28,15,s);
 377   2                      write_lcd8(28,17,o);
 378   2              write_lcd8(28,18,n);
 379   2                      write_lcd8(28,19,e);
 380   2      
 381   2                      write_lcd8(45,9,l);
 382   2                      write_lcd8(45,10,e); 
 383   2                      write_lcd8(45,11,f);
 384   2                      write_lcd8(45,12,t);
 385   2                      write_lcd8(45,14,p1);
 386   2                      write_lcd8(45,15,a); 
 387   2                      write_lcd8(45,16,s);
 388   2                      write_lcd8(45,17,s);
 389   2                  write_lcd8(45,19,t); 
 390   2                      write_lcd8(45,20,w);
 391   2                      write_lcd8(45,21,o);
 392   2      
 393   2                      write_lcd8(62,9,d);
 394   2                      write_lcd8(62,10,o); 
 395   2                      write_lcd8(62,11,w);
 396   2                      write_lcd8(62,12,n);
 397   2                      write_lcd8(62,14,p1);
 398   2                      write_lcd8(62,15,a); 
 399   2                      write_lcd8(62,16,s);
 400   2                      write_lcd8(62,17,s);
 401   2                  write_lcd8(62,19,t); 
 402   2                      write_lcd8(62,20,h);
 403   2                      write_lcd8(62,21,r);
 404   2                      write_lcd8(62,22,e);
 405   2                      write_lcd8(62,23,e);
 406   2      
 407   2      
 408   2              }
 409   1      
 410   1      }
 411          
 412          
 413          
 414          
 415          /*******************************************************************************
C51 COMPILER V9.01   INTERFACE                                                             05/11/2021 08:03:24 PAGE 8   

 416          * 函 数 名         : print_enemy1(uchar x,uchar y);
 417          * 函数功能         : 打印一个敌人
 418          * 输    入         : 打印的位置坐标
 419          * 输    出         : 
 420          *******************************************************************************/
 421          
 422          void print_enemy1(uchar x,uchar y)
 423          {
 424   1      
 425   1              write_lcd16(x,y,enemy1);
 426   1      
 427   1      
 428   1      }
 429          
 430          void init_enemy()
 431          {
 432   1      
 433   1              print_enemy1(17,0);
 434   1              Di[Di_quantity].x = 0;
 435   1              Di[Di_quantity].y = 0;
 436   1              Di[Di_quantity].direction = 0;
 437   1              Di[Di_quantity].exist = 1;
 438   1              Di[Di_quantity].live = 3;
 439   1              enemy[0][0] = 1;
 440   1      
 441   1      
 442   1      }
 443          
 444          void enemy_move(){
 445   1      
 446   1      
 447   1      
 448   1      
 449   1      }
 450          
 451          
 452          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2585    ----
   CONSTANT SIZE    =    644    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      43
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
